@use "sass:math";
@use "sass:color";

$colorPrimary: red;
$colorSecondary: green;
$colorTertiary: blue;

@function color($color) {
  $colorFinal: $color;
  @return $colorFinal;
}
@function colorBorder($border) {
  $borderFinal: $border;
  @return $borderFinal;
}

@function fontSize($fontS) {
  @return math.div($fontS, 16) * 1;
}

@mixin colorChangeText($color: color(transparent), $border: colorBorder(transparent), $fontS: 16) {
  color: color($color);
  border: 1px solid colorBorder($border);
  font-size: fontSize($fontS);
  @content;
}

@mixin colorChangeBackground() {
  @for $i from 1 through 20 {
    div:nth-child(#{$i}) {
      background-color: darken($color: white, $amount: $i * 5);
      color: lighten($color: black, $amount: $i * 5);
      @if $i == 10 {
        color: red;
        background-color: blue;
      }
    }
  }
}

.container {
  @include colorChangeText($border: colorBorder($colorPrimary));
  padding: 1rem;
  text-align: center;
  h1 {
    margin: auto;
    @include colorChangeText($color: color($colorSecondary), $fontS: fontSize($fontS: 3)) {
      border-bottom: 1px solid $colorTertiary;
    }
    width: 35rem;
  }

  h2 {
    padding: 1rem;
    margin-top: 1rem;
    @extend h1;
    @include colorChangeText(color($colorSecondary), $border: colorBorder($colorPrimary));
  }

  section {
    padding-top: 1rem;
    display: flex;
    gap: 1rem;
    width: 100%;
    flex-direction: row;
    article {
      &:nth-child(odd) {
        @include colorChangeText($color: colorFinal($colorTertiary), $border: borderFinal($colorSecondary));
      }
      &:nth-child(even) {
        @include colorChangeText($color: color($colorPrimary), $border: colorBorder($colorSecondary));
      }
      @include colorChangeText($color: color($colorTertiary), $border: colorBorder($colorSecondary));
    }

    article {
      width: 100vw;
      font-size: 16px;
      text-align: center;
      &.fullW {
        @include colorChangeText($colorSecondary, $colorTertiary, $fontS: 24rem);
      }
    }
  }
  div {
    @include colorChangeText($color: color(gray), $border: colorBorder($colorPrimary));
    width: pxConverter(90px);
    height: pxConverter(45px);
  }
}

.newSection {
  div {
    width: 4rem;
  }
  @include colorChangeBackground();
  $rems: (
    1rem: 1rem,
    2rem: 2rem,
    3rem: 3rem,
  );
  @each $key, $value in $rems {
    .fs-#{$key} {
      font-size: $value;
    }
  };
};